# redirect to https
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    return 301 https://$host$request_uri;
}

# redirect invalid websites
server {
        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;
        include snippets/snakeoil.conf;
        include snippets/realip.conf;
        server_name _;
        location ~ ^/(?<path>.*) {
	        return 301 https://parrotsec.org/$path;
	    }
}

# redirect websites to main domain
server {
        listen 443 ssl;
        listen [::]:443 ssl;
        include snippets/snakeoil.conf;
        include snippets/realip.conf;
        server_name fzbx.io www.fzbx.io parrot.sh www.parrot.sh parrotsec.io www.parrotsec.io parrotlinux.com www.parrotlinux.com parrotlinux.net www.parrotlinux.net;
        location ~ ^/(?<path>.*) {
	        return 301 https://parrotsec.org/$path;
        }
}

# redirect community to main domain
        listen 443 ssl;
        listen [::]:443 ssl;
        include snippets/snakeoil.conf;
        include snippets/realip.conf;
        server_name community.parrot.sh community.parrotlinux.com community.parrotlinux.net community.parrotsec.io;
        location ~ ^/(?<path>.*) {
	        return 301 https://community.parrotsec.org/$path;
	    }
}

# website
server {
        listen 443 ssl;
        listen [::]:443 ssl;
        include snippets/snakeoil.conf;
        include snippets/realip.conf;
        root /var/www/html;
        index index.php index.html;

        server_name blog.* docs.* documentation.* start.* www.* parrotsec.org parrotlinux.org;

        location / {
                proxy_pass http://172.18.42.3;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
        }

        location ~* \.(css|js|png|gif|jpg|sass|eot|svg|ttf|woff|woff2|html)$ {
                proxy_pass http://172.18.42.3;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                expires max;
                add_header Pragma public;
                add_header Cache-Control "public";
        }
        
        location ~ ^/docs/(?<path>.*) {
	        return 301 https://docs.parrotsec.org/$path;
        }

        #location ~ /\.ht {
        #       deny all;
        #}

}


# static
server {
        listen 443 ssl;
        listen [::]:443 ssl;
        include snippets/snakeoil.conf;
        include snippets/realip.conf;

        root /var/www/static;
        index index.html;
        server_name static.* director.geo.* geo.* cdn.* gibson1.infra.parrot.sh gibson2.infra.parrot.sh;
        location / {
                autoindex on;
                try_files $uri $uri/ =404;
                expires max;
                add_header Pragma public;
                add_header Cache-Control "public";
        }
}

# community
server {
        listen 443 ssl;
        listen [::]:443 ssl;
        include snippets/snakeoil.conf;
        include snippets/realip.conf;

        server_name community.* cdn-community.*;

        http2_idle_timeout 5m;

        location / {
                proxy_pass https://172.18.42.1:8443;
                proxy_set_header Host community.parrot.sh;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-Proto https;
                proxy_buffers 64 16384k;
                proxy_buffer_size 512k;
        }

        location ~* \.(css|js|png|gif|jpg|sass|eot|svg|ttf|woff|woff2)$ {
                proxy_pass https://172.18.42.1:8443;
                proxy_set_header Host community.parrot.sh;
                proxy_set_header X-Real-IP $remote_addr;
                expires max;
                add_header Pragma public;
                add_header Cache-Control "public";
        }
}

# board
server {
        listen 443 ssl;
        listen [::]:443 ssl;
        include snippets/snakeoil.conf;
        include snippets/realip.conf;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Robots-Tag none;
        add_header X-Download-Options noopen;
        add_header X-Permitted-Cross-Domain-Policies none;
	add_header Referrer-Policy "same-origin";

        server_name board.*;

        http2_idle_timeout 5m;

        location / {
                proxy_pass http://wekan:8080;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
		proxy_set_header X-Forwarded-For $remote_addr;
                proxy_read_timeout 86400;
        }

        location ~* \.(css|js|png|gif|jpg|sass|eot|svg|ttf|woff|woff2)$ {
                proxy_pass http://wekan:8080;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
		proxy_set_header X-Forwarded-For $remote_addr;
                proxy_read_timeout 86400;
                expires max;
                add_header Pragma public;
                add_header Cache-Control "public";
        }
}

# cryptpad
server {
        listen 443 ssl;
        listen [::]:443 ssl;
        include snippets/snakeoil.conf;
        include snippets/realip.conf;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Robots-Tag none;
        add_header X-Download-Options noopen;
        add_header X-Permitted-Cross-Domain-Policies none;
        add_header Referrer-Policy "same-origin";

        server_name cloud.* pad.* poll.* paste.* cryptpad.* crypt.* secure.*;

        http2_idle_timeout 5m;

        location / {
                proxy_pass http://cryptpad:3000;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
		        proxy_set_header Connection $connection_upgrade;
		        proxy_set_header X-Forwarded-For $remote_addr;
                proxy_read_timeout 86400;
        }

        location ~* \.(css|js|png|gif|jpg|sass|eot|svg|ttf|woff|woff2)$ {
                proxy_pass http://cryptpad:3000;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
		        proxy_set_header Connection $connection_upgrade;
		        proxy_set_header X-Forwarded-For $remote_addr;
                proxy_read_timeout 86400;
                expires max;
                add_header Pragma public;
                add_header Cache-Control "public";
        }
}

# tracker
server {
        listen 443 ssl;
        listen [::]:443 ssl;
        include snippets/snakeoil.conf;
        include snippets/realip.conf;
        root /var/www/html;
        index index.php index.html;
        client_max_body_size 10G;

        server_name tracker.* torrent.* wolf.* tracker2.* torrent2.* wolf2.*;

        location / {
                proxy_pass http://172.18.42.5:80;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
        }
        access_log off; #already logged by production rules
}
